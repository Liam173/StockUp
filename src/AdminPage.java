
import com.sun.java.swing.plaf.windows.resources.windows;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Liam
 */
public class AdminPage extends javax.swing.JFrame {

    /**
     * Creates new form AdminPage
     */
    Connection conn = null;
    Statement st = null;
    ResultSet rs = null;

    public AdminPage(LoginPage login, ResultSet rs, Connection conn) {
        login.dispose();
        initComponents();
        setSize(1270, 730);

        setPreferredStates();

        try {
            this.conn = conn;
            st = this.conn.createStatement();
            AdminNameLbl.setText(rs.getString("admin_Name"));
            populateStoresDropdown();
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        MinLbl = new javax.swing.JLabel();
        ExitLbl = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        StoreNameLbl = new javax.swing.JLabel();
        ContactNumberLbl = new javax.swing.JLabel();
        UsernameLbl = new javax.swing.JLabel();
        StoreAddressLbl = new javax.swing.JLabel();
        StoreNameTf = new javax.swing.JTextField();
        ContactNumberTf = new javax.swing.JTextField();
        UsernameTf = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        StoreAddressTa = new javax.swing.JTextArea();
        AddStoreBtn = new javax.swing.JButton();
        DeleteStoreBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ProductNameLbl = new javax.swing.JLabel();
        ProductNameTf = new javax.swing.JTextField();
        UnitsPerCrateTf = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        lblWarningUnits = new javax.swing.JLabel();
        UnitsPerCrateLbl1 = new javax.swing.JLabel();
        UnitsPerCrateLbl2 = new javax.swing.JLabel();
        CompanyIDTf = new javax.swing.JTextField();
        lblWarningCompanyId = new javax.swing.JLabel();
        lblWarningProduct = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        DispatchUserLbl = new javax.swing.JLabel();
        DispatchPasswordLbl = new javax.swing.JLabel();
        DispatchUser_Name_Tf = new javax.swing.JTextField();
        DipatchUserDeleteBtn = new javax.swing.JButton();
        DispatchUserAddBtn = new javax.swing.JButton();
        ScrollPane_AddDispatchUserWarnings = new javax.swing.JScrollPane();
        Ta_AddDispatchUserWarnings = new javax.swing.JTextArea();
        DispatchUser_Password_Pf = new javax.swing.JPasswordField();
        StoreUsernameLbl5 = new javax.swing.JLabel();
        DispatchUser_Username_Tf = new javax.swing.JTextField();
        DispatchUser_Surname_Tf = new javax.swing.JTextField();
        password_warning_lbl5 = new javax.swing.JLabel();
        showPassword_AddDispatchUser_Lbl = new javax.swing.JLabel();
        DispatchUser_Name_Lbl1 = new javax.swing.JLabel();
        DispatchUser_Surame_Lbl1 = new javax.swing.JLabel();
        password_warning_lbl4 = new javax.swing.JLabel();
        password_warning_lbl6 = new javax.swing.JLabel();
        StoreUserLbl = new javax.swing.JLabel();
        AdminUserLbl = new javax.swing.JLabel();
        StorePasswordLbl = new javax.swing.JLabel();
        StoreIdentityLbl = new javax.swing.JLabel();
        AdminUsernameLbl = new javax.swing.JLabel();
        AdminPasswordLbl = new javax.swing.JLabel();
        StoreUser_Username_Tf = new javax.swing.JTextField();
        AdminNameTf = new javax.swing.JTextField();
        StoreUser_StoreName_Cb = new javax.swing.JComboBox<>();
        StoreUserAddBtn = new javax.swing.JButton();
        StoreUserDeleteBtn = new javax.swing.JButton();
        AdminUserAddBtn = new javax.swing.JButton();
        AdminUserDeleteBtn = new javax.swing.JButton();
        StoreUsernameLbl1 = new javax.swing.JLabel();
        StoreUsernameLbl2 = new javax.swing.JLabel();
        StoreUsernameLbl3 = new javax.swing.JLabel();
        StoreUser_Name_Tf = new javax.swing.JTextField();
        StoreUser_Surname_Tf = new javax.swing.JTextField();
        password_warning_lbl1 = new javax.swing.JLabel();
        password_warning_lbl3 = new javax.swing.JLabel();
        password_warning_lbl2 = new javax.swing.JLabel();
        ScrollPane_AddStoreUserWarnings = new javax.swing.JScrollPane();
        Ta_AddStoreUserWarnings = new javax.swing.JTextArea();
        ScrollPane_AddStoreUserWarnings2 = new javax.swing.JScrollPane();
        Ta_AddAdminUserWarnings = new javax.swing.JTextArea();
        StoreUser_Password_Pf = new javax.swing.JPasswordField();
        showPassword_AddStoreUser_Lbl = new javax.swing.JLabel();
        DispatchUser_Name_Lbl = new javax.swing.JLabel();
        DispatchUser_Surame_Lbl = new javax.swing.JLabel();
        AdminUsernameTf = new javax.swing.JTextField();
        AdminSurnameTf = new javax.swing.JTextField();
        AdminPasswordPf = new javax.swing.JPasswordField();
        password_warning_lbl7 = new javax.swing.JLabel();
        password_warning_lbl8 = new javax.swing.JLabel();
        password_warning_lbl9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        AdminNameLbl = new javax.swing.JLabel();
        btnSignOut = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);

        MinLbl.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        MinLbl.setForeground(new java.awt.Color(255, 255, 255));
        MinLbl.setText("-");
        MinLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinLblMouseClicked(evt);
            }
        });
        jPanel1.add(MinLbl);
        MinLbl.setBounds(1180, 0, 31, 58);

        ExitLbl.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        ExitLbl.setForeground(new java.awt.Color(255, 255, 255));
        ExitLbl.setText("x");
        ExitLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitLblMouseClicked(evt);
            }
        });
        jPanel1.add(ExitLbl);
        ExitLbl.setBounds(1220, 0, 28, 58);

        jPanel3.setBackground(new java.awt.Color(133, 1, 41));
        jPanel3.setLayout(null);

        StoreNameLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        StoreNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        StoreNameLbl.setText("Store name:");
        jPanel3.add(StoreNameLbl);
        StoreNameLbl.setBounds(250, 80, 100, 17);

        ContactNumberLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ContactNumberLbl.setForeground(new java.awt.Color(255, 255, 255));
        ContactNumberLbl.setText("Contact number:");
        jPanel3.add(ContactNumberLbl);
        ContactNumberLbl.setBounds(220, 120, 117, 17);

        UsernameLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UsernameLbl.setForeground(new java.awt.Color(255, 255, 255));
        UsernameLbl.setText("Username:");
        jPanel3.add(UsernameLbl);
        UsernameLbl.setBounds(260, 160, 80, 17);

        StoreAddressLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        StoreAddressLbl.setForeground(new java.awt.Color(255, 255, 255));
        StoreAddressLbl.setText("Store address:");
        jPanel3.add(StoreAddressLbl);
        StoreAddressLbl.setBounds(230, 200, 110, 17);
        jPanel3.add(StoreNameTf);
        StoreNameTf.setBounds(370, 80, 310, 26);
        jPanel3.add(ContactNumberTf);
        ContactNumberTf.setBounds(370, 120, 310, 26);
        jPanel3.add(UsernameTf);
        UsernameTf.setBounds(370, 160, 310, 26);

        StoreAddressTa.setColumns(20);
        StoreAddressTa.setRows(5);
        jScrollPane1.setViewportView(StoreAddressTa);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(370, 200, 310, 180);

        AddStoreBtn.setBackground(new java.awt.Color(168, 153, 104));
        AddStoreBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddStoreBtn.setText("Add");
        AddStoreBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddStoreBtnActionPerformed(evt);
            }
        });
        jPanel3.add(AddStoreBtn);
        AddStoreBtn.setBounds(420, 400, 90, 30);

        DeleteStoreBtn.setBackground(new java.awt.Color(168, 153, 104));
        DeleteStoreBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteStoreBtn.setText("Delete");
        jPanel3.add(DeleteStoreBtn);
        DeleteStoreBtn.setBounds(540, 400, 90, 30);

        jTabbedPane1.addTab("Add/Delete Store", jPanel3);

        jPanel4.setBackground(new java.awt.Color(133, 1, 41));
        jPanel4.setLayout(null);

        ProductNameLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ProductNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        ProductNameLbl.setText("Product name:");
        jPanel4.add(ProductNameLbl);
        ProductNameLbl.setBounds(350, 150, 110, 30);
        jPanel4.add(ProductNameTf);
        ProductNameTf.setBounds(480, 150, 220, 30);
        jPanel4.add(UnitsPerCrateTf);
        UnitsPerCrateTf.setBounds(480, 200, 220, 30);

        AddBtn.setBackground(new java.awt.Color(168, 153, 104));
        AddBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddBtn.setText("Add");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });
        jPanel4.add(AddBtn);
        AddBtn.setBounds(400, 310, 100, 30);

        DeleteBtn.setBackground(new java.awt.Color(168, 153, 104));
        DeleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteBtn.setText("Delete");
        jPanel4.add(DeleteBtn);
        DeleteBtn.setBounds(550, 310, 100, 30);

        lblWarningUnits.setBackground(new java.awt.Color(255, 153, 51));
        lblWarningUnits.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningUnits.setText("warning");
        jPanel4.add(lblWarningUnits);
        lblWarningUnits.setBounds(710, 210, 210, 16);

        UnitsPerCrateLbl1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UnitsPerCrateLbl1.setForeground(new java.awt.Color(255, 255, 255));
        UnitsPerCrateLbl1.setText("Units per crate:");
        jPanel4.add(UnitsPerCrateLbl1);
        UnitsPerCrateLbl1.setBounds(350, 200, 120, 30);

        UnitsPerCrateLbl2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UnitsPerCrateLbl2.setForeground(new java.awt.Color(255, 255, 255));
        UnitsPerCrateLbl2.setText("Company ID");
        jPanel4.add(UnitsPerCrateLbl2);
        UnitsPerCrateLbl2.setBounds(350, 250, 120, 30);
        jPanel4.add(CompanyIDTf);
        CompanyIDTf.setBounds(480, 250, 220, 30);

        lblWarningCompanyId.setBackground(new java.awt.Color(255, 153, 51));
        lblWarningCompanyId.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningCompanyId.setText("warning");
        jPanel4.add(lblWarningCompanyId);
        lblWarningCompanyId.setBounds(710, 260, 210, 16);

        lblWarningProduct.setBackground(new java.awt.Color(255, 153, 51));
        lblWarningProduct.setForeground(new java.awt.Color(255, 0, 0));
        lblWarningProduct.setText("warning");
        jPanel4.add(lblWarningProduct);
        lblWarningProduct.setBounds(710, 160, 210, 16);

        jTabbedPane1.addTab("Add/Delete Product", jPanel4);

        jPanel2.setBackground(new java.awt.Color(133, 1, 41));
        jPanel2.setLayout(null);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        jPanel5.setLayout(null);

        DispatchUserLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        DispatchUserLbl.setForeground(new java.awt.Color(255, 255, 255));
        DispatchUserLbl.setText("Dispatch User");
        jPanel5.add(DispatchUserLbl);
        DispatchUserLbl.setBounds(90, 0, 170, 40);

        DispatchPasswordLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchPasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        DispatchPasswordLbl.setText("Password:");
        jPanel5.add(DispatchPasswordLbl);
        DispatchPasswordLbl.setBounds(50, 230, 90, 30);

        DispatchUser_Name_Tf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel5.add(DispatchUser_Name_Tf);
        DispatchUser_Name_Tf.setBounds(150, 60, 130, 30);

        DipatchUserDeleteBtn.setBackground(new java.awt.Color(91, 0, 26));
        DipatchUserDeleteBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DipatchUserDeleteBtn.setText("Delete User");
        DipatchUserDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DipatchUserDeleteBtnActionPerformed(evt);
            }
        });
        jPanel5.add(DipatchUserDeleteBtn);
        DipatchUserDeleteBtn.setBounds(190, 390, 110, 23);

        DispatchUserAddBtn.setBackground(new java.awt.Color(91, 0, 26));
        DispatchUserAddBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchUserAddBtn.setText("Add User");
        DispatchUserAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DispatchUserAddBtnActionPerformed(evt);
            }
        });
        jPanel5.add(DispatchUserAddBtn);
        DispatchUserAddBtn.setBounds(40, 390, 110, 23);

        ScrollPane_AddDispatchUserWarnings.setBorder(null);

        Ta_AddDispatchUserWarnings.setEditable(false);
        Ta_AddDispatchUserWarnings.setBackground(new java.awt.Color(0, 0, 0));
        Ta_AddDispatchUserWarnings.setColumns(20);
        Ta_AddDispatchUserWarnings.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Ta_AddDispatchUserWarnings.setForeground(new java.awt.Color(255, 0, 0));
        Ta_AddDispatchUserWarnings.setRows(5);
        Ta_AddDispatchUserWarnings.setText("Warnings");
        ScrollPane_AddDispatchUserWarnings.setViewportView(Ta_AddDispatchUserWarnings);

        jPanel5.add(ScrollPane_AddDispatchUserWarnings);
        ScrollPane_AddDispatchUserWarnings.setBounds(40, 420, 260, 150);

        DispatchUser_Password_Pf.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel5.add(DispatchUser_Password_Pf);
        DispatchUser_Password_Pf.setBounds(150, 230, 130, 30);

        StoreUsernameLbl5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUsernameLbl5.setForeground(new java.awt.Color(255, 255, 255));
        StoreUsernameLbl5.setText("Username:");
        jPanel5.add(StoreUsernameLbl5);
        StoreUsernameLbl5.setBounds(50, 170, 90, 20);
        jPanel5.add(DispatchUser_Username_Tf);
        DispatchUser_Username_Tf.setBounds(150, 170, 130, 30);

        DispatchUser_Surname_Tf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel5.add(DispatchUser_Surname_Tf);
        DispatchUser_Surname_Tf.setBounds(150, 110, 130, 30);

        password_warning_lbl5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl5.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl5.setText("One special character (@#$%^&+=)");
        jPanel5.add(password_warning_lbl5);
        password_warning_lbl5.setBounds(120, 330, 204, 20);

        showPassword_AddDispatchUser_Lbl.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        showPassword_AddDispatchUser_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        showPassword_AddDispatchUser_Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/show-password-white.png"))); // NOI18N
        showPassword_AddDispatchUser_Lbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPassword_AddDispatchUser_LblMouseClicked(evt);
            }
        });
        jPanel5.add(showPassword_AddDispatchUser_Lbl);
        showPassword_AddDispatchUser_Lbl.setBounds(290, 220, 30, 50);

        DispatchUser_Name_Lbl1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchUser_Name_Lbl1.setForeground(new java.awt.Color(255, 255, 255));
        DispatchUser_Name_Lbl1.setText("Name:");
        jPanel5.add(DispatchUser_Name_Lbl1);
        DispatchUser_Name_Lbl1.setBounds(60, 70, 40, 14);

        DispatchUser_Surame_Lbl1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchUser_Surame_Lbl1.setForeground(new java.awt.Color(255, 255, 255));
        DispatchUser_Surame_Lbl1.setText("Surame:");
        jPanel5.add(DispatchUser_Surame_Lbl1);
        DispatchUser_Surame_Lbl1.setBounds(50, 120, 60, 14);

        password_warning_lbl4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl4.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl4.setText("Minimum 8 characters");
        jPanel5.add(password_warning_lbl4);
        password_warning_lbl4.setBounds(120, 270, 170, 20);

        password_warning_lbl6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl6.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl6.setText("One uppercase, one lowercase");
        jPanel5.add(password_warning_lbl6);
        password_warning_lbl6.setBounds(120, 300, 180, 14);

        jPanel2.add(jPanel5);
        jPanel5.setBounds(350, 0, 340, 540);

        StoreUserLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        StoreUserLbl.setForeground(new java.awt.Color(255, 255, 255));
        StoreUserLbl.setText("Store User");
        jPanel2.add(StoreUserLbl);
        StoreUserLbl.setBounds(110, 10, 130, 30);

        AdminUserLbl.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        AdminUserLbl.setForeground(new java.awt.Color(255, 255, 255));
        AdminUserLbl.setText("Admin User");
        jPanel2.add(AdminUserLbl);
        AdminUserLbl.setBounds(790, 0, 150, 40);

        StorePasswordLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StorePasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        StorePasswordLbl.setText("Password:");
        jPanel2.add(StorePasswordLbl);
        StorePasswordLbl.setBounds(20, 300, 80, 20);

        StoreIdentityLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreIdentityLbl.setForeground(new java.awt.Color(255, 255, 255));
        StoreIdentityLbl.setText("Store:");
        jPanel2.add(StoreIdentityLbl);
        StoreIdentityLbl.setBounds(20, 180, 60, 14);

        AdminUsernameLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AdminUsernameLbl.setForeground(new java.awt.Color(255, 255, 255));
        AdminUsernameLbl.setText("Username:");
        jPanel2.add(AdminUsernameLbl);
        AdminUsernameLbl.setBounds(750, 140, 80, 30);

        AdminPasswordLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AdminPasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        AdminPasswordLbl.setText("Password:");
        jPanel2.add(AdminPasswordLbl);
        AdminPasswordLbl.setBounds(750, 200, 80, 20);
        jPanel2.add(StoreUser_Username_Tf);
        StoreUser_Username_Tf.setBounds(130, 230, 130, 30);

        AdminNameTf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel2.add(AdminNameTf);
        AdminNameTf.setBounds(850, 70, 130, 24);

        jPanel2.add(StoreUser_StoreName_Cb);
        StoreUser_StoreName_Cb.setBounds(130, 170, 130, 30);

        StoreUserAddBtn.setBackground(new java.awt.Color(46, 50, 64));
        StoreUserAddBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUserAddBtn.setText("Add User");
        StoreUserAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreUserAddBtnActionPerformed(evt);
            }
        });
        jPanel2.add(StoreUserAddBtn);
        StoreUserAddBtn.setBounds(40, 390, 110, 29);

        StoreUserDeleteBtn.setBackground(new java.awt.Color(46, 50, 64));
        StoreUserDeleteBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUserDeleteBtn.setText("Delete User");
        StoreUserDeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreUserDeleteBtnActionPerformed(evt);
            }
        });
        jPanel2.add(StoreUserDeleteBtn);
        StoreUserDeleteBtn.setBounds(180, 390, 110, 29);

        AdminUserAddBtn.setBackground(new java.awt.Color(46, 50, 64));
        AdminUserAddBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AdminUserAddBtn.setText("Add User");
        AdminUserAddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminUserAddBtnActionPerformed(evt);
            }
        });
        jPanel2.add(AdminUserAddBtn);
        AdminUserAddBtn.setBounds(740, 390, 110, 29);

        AdminUserDeleteBtn.setBackground(new java.awt.Color(46, 50, 64));
        AdminUserDeleteBtn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AdminUserDeleteBtn.setText("Delete User");
        jPanel2.add(AdminUserDeleteBtn);
        AdminUserDeleteBtn.setBounds(890, 390, 110, 29);

        StoreUsernameLbl1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUsernameLbl1.setForeground(new java.awt.Color(255, 255, 255));
        StoreUsernameLbl1.setText("Username:");
        jPanel2.add(StoreUsernameLbl1);
        StoreUsernameLbl1.setBounds(20, 240, 90, 20);

        StoreUsernameLbl2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUsernameLbl2.setForeground(new java.awt.Color(255, 255, 255));
        StoreUsernameLbl2.setText("Name:");
        jPanel2.add(StoreUsernameLbl2);
        StoreUsernameLbl2.setBounds(20, 60, 90, 20);

        StoreUsernameLbl3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        StoreUsernameLbl3.setForeground(new java.awt.Color(255, 255, 255));
        StoreUsernameLbl3.setText("Surname:");
        jPanel2.add(StoreUsernameLbl3);
        StoreUsernameLbl3.setBounds(20, 110, 90, 20);
        jPanel2.add(StoreUser_Name_Tf);
        StoreUser_Name_Tf.setBounds(130, 60, 130, 30);
        jPanel2.add(StoreUser_Surname_Tf);
        StoreUser_Surname_Tf.setBounds(130, 110, 130, 30);

        password_warning_lbl1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl1.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl1.setText("Minimum 8 characters");
        jPanel2.add(password_warning_lbl1);
        password_warning_lbl1.setBounds(130, 320, 170, 20);

        password_warning_lbl3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl3.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl3.setText("One special character (@#$%^&+=)");
        jPanel2.add(password_warning_lbl3);
        password_warning_lbl3.setBounds(130, 370, 210, 20);

        password_warning_lbl2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl2.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl2.setText("One uppercase, one lowercase");
        jPanel2.add(password_warning_lbl2);
        password_warning_lbl2.setBounds(130, 350, 190, 14);

        ScrollPane_AddStoreUserWarnings.setBorder(null);

        Ta_AddStoreUserWarnings.setEditable(false);
        Ta_AddStoreUserWarnings.setBackground(new java.awt.Color(133, 1, 41));
        Ta_AddStoreUserWarnings.setColumns(20);
        Ta_AddStoreUserWarnings.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Ta_AddStoreUserWarnings.setForeground(new java.awt.Color(255, 0, 0));
        Ta_AddStoreUserWarnings.setRows(5);
        Ta_AddStoreUserWarnings.setText("Warnings");
        ScrollPane_AddStoreUserWarnings.setViewportView(Ta_AddStoreUserWarnings);

        jPanel2.add(ScrollPane_AddStoreUserWarnings);
        ScrollPane_AddStoreUserWarnings.setBounds(40, 420, 250, 150);

        ScrollPane_AddStoreUserWarnings2.setBorder(null);

        Ta_AddAdminUserWarnings.setEditable(false);
        Ta_AddAdminUserWarnings.setBackground(new java.awt.Color(133, 1, 41));
        Ta_AddAdminUserWarnings.setColumns(20);
        Ta_AddAdminUserWarnings.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Ta_AddAdminUserWarnings.setForeground(new java.awt.Color(255, 0, 0));
        Ta_AddAdminUserWarnings.setRows(5);
        Ta_AddAdminUserWarnings.setText("Warnings");
        ScrollPane_AddStoreUserWarnings2.setViewportView(Ta_AddAdminUserWarnings);

        jPanel2.add(ScrollPane_AddStoreUserWarnings2);
        ScrollPane_AddStoreUserWarnings2.setBounds(740, 420, 260, 150);

        StoreUser_Password_Pf.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel2.add(StoreUser_Password_Pf);
        StoreUser_Password_Pf.setBounds(130, 290, 130, 30);

        showPassword_AddStoreUser_Lbl.setFont(new java.awt.Font("Leelawadee UI", 1, 48)); // NOI18N
        showPassword_AddStoreUser_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        showPassword_AddStoreUser_Lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/show-password.png"))); // NOI18N
        showPassword_AddStoreUser_Lbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPassword_AddStoreUser_LblMouseClicked(evt);
            }
        });
        jPanel2.add(showPassword_AddStoreUser_Lbl);
        showPassword_AddStoreUser_Lbl.setBounds(270, 280, 30, 50);

        DispatchUser_Name_Lbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchUser_Name_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        DispatchUser_Name_Lbl.setText("Name:");
        jPanel2.add(DispatchUser_Name_Lbl);
        DispatchUser_Name_Lbl.setBounds(750, 70, 40, 14);

        DispatchUser_Surame_Lbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DispatchUser_Surame_Lbl.setForeground(new java.awt.Color(255, 255, 255));
        DispatchUser_Surame_Lbl.setText("Surame:");
        jPanel2.add(DispatchUser_Surame_Lbl);
        DispatchUser_Surame_Lbl.setBounds(750, 110, 60, 14);

        AdminUsernameTf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel2.add(AdminUsernameTf);
        AdminUsernameTf.setBounds(850, 150, 130, 24);

        AdminSurnameTf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jPanel2.add(AdminSurnameTf);
        AdminSurnameTf.setBounds(850, 110, 130, 24);
        jPanel2.add(AdminPasswordPf);
        AdminPasswordPf.setBounds(850, 200, 130, 26);

        password_warning_lbl7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl7.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl7.setText("Minimum 8 characters");
        jPanel2.add(password_warning_lbl7);
        password_warning_lbl7.setBounds(810, 240, 170, 20);

        password_warning_lbl8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl8.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl8.setText("One uppercase, one lowercase");
        jPanel2.add(password_warning_lbl8);
        password_warning_lbl8.setBounds(810, 270, 180, 14);

        password_warning_lbl9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        password_warning_lbl9.setForeground(new java.awt.Color(255, 0, 0));
        password_warning_lbl9.setText("One special character (@#$%^&+=)");
        jPanel2.add(password_warning_lbl9);
        password_warning_lbl9.setBounds(810, 300, 204, 20);

        jTabbedPane1.addTab("Add/Delete User", jPanel2);

        jPanel1.add(jTabbedPane1);
        jTabbedPane1.setBounds(120, 130, 1040, 570);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setLayout(null);

        AdminNameLbl.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AdminNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        AdminNameLbl.setText("AdminName");
        jPanel6.add(AdminNameLbl);
        AdminNameLbl.setBounds(760, 0, 240, 70);

        btnSignOut.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSignOut.setForeground(new java.awt.Color(255, 255, 255));
        btnSignOut.setText("Sign Out");
        btnSignOut.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(133, 1, 41), 3, true));
        btnSignOut.setContentAreaFilled(false);
        btnSignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignOutActionPerformed(evt);
            }
        });
        jPanel6.add(btnSignOut);
        btnSignOut.setBounds(940, 20, 90, 30);

        jPanel1.add(jPanel6);
        jPanel6.setBounds(120, 90, 1040, 530);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Lifestyle_Overlay.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1270, 740);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1270, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MinLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinLblMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_MinLblMouseClicked

    private void ExitLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitLblMouseClicked
        System.exit(0);
    }//GEN-LAST:event_ExitLblMouseClicked

    private void btnSignOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignOutActionPerformed
        LoginPage lp = new LoginPage();
        lp.signOut(this);
    }//GEN-LAST:event_btnSignOutActionPerformed

    private void AddStoreBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddStoreBtnActionPerformed
        addStore(StoreNameTf.getText(), ContactNumberTf.getText(), UsernameTf.getText(), StoreAddressTa.getText());
    }//GEN-LAST:event_AddStoreBtnActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        addProduct(ProductNameTf.getText(), UnitsPerCrateTf.getText(), CompanyIDTf.getText());
    }//GEN-LAST:event_AddBtnActionPerformed

    private void StoreUserAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreUserAddBtnActionPerformed
        addStoreUser(StoreUser_Name_Tf.getText(), StoreUser_Surname_Tf.getText(), StoreUser_StoreName_Cb.getSelectedItem().toString(), StoreUser_Username_Tf.getText(), StoreUser_Password_Pf.getText());
    }//GEN-LAST:event_StoreUserAddBtnActionPerformed

    private void showPassword_AddDispatchUser_LblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPassword_AddDispatchUser_LblMouseClicked
        char clear = 0;
        char current = DispatchUser_Password_Pf.getEchoChar();
        int compareOneTwo = Character.compare(current, clear);
        if (compareOneTwo == 0) {
            showPassword_AddDispatchUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password-white.png")));
            DispatchUser_Password_Pf.setEchoChar('*');
        } else {
            showPassword_AddDispatchUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password-on.png")));
            DispatchUser_Password_Pf.setEchoChar(clear);
        }
    }//GEN-LAST:event_showPassword_AddDispatchUser_LblMouseClicked

    private void StoreUserDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreUserDeleteBtnActionPerformed
        String u_name = StoreUser_Username_Tf.getText();
        clearAddStoreUserFields();
        deleteStoreUser(u_name);
    }//GEN-LAST:event_StoreUserDeleteBtnActionPerformed

    private void DispatchUserAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DispatchUserAddBtnActionPerformed
        addDispatchUser(DispatchUser_Name_Tf.getText(), DispatchUser_Surname_Tf.getText(), DispatchUser_Username_Tf.getText(), DispatchUser_Password_Pf.getText());
    }//GEN-LAST:event_DispatchUserAddBtnActionPerformed

    private void DipatchUserDeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DipatchUserDeleteBtnActionPerformed

        String u_name = DispatchUser_Username_Tf.getText();
        clearAddStoreUserFields();
        deleteStoreUser(u_name);
    }//GEN-LAST:event_DipatchUserDeleteBtnActionPerformed

    private void showPassword_AddStoreUser_LblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPassword_AddStoreUser_LblMouseClicked
        char clear = 0;
        char current = StoreUser_Password_Pf.getEchoChar();
        int compareOneTwo = Character.compare(current, clear);
        if (compareOneTwo == 0) {
            showPassword_AddStoreUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password.png")));
            StoreUser_Password_Pf.setEchoChar('*');
        } else {
            showPassword_AddStoreUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password-on.png")));
            StoreUser_Password_Pf.setEchoChar(clear);
        }
    }//GEN-LAST:event_showPassword_AddStoreUser_LblMouseClicked

    private void AdminUserAddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminUserAddBtnActionPerformed
        addAdminUser(AdminNameTf.getText(), AdminSurnameTf.getText(), AdminUsernameTf.getText(), AdminPasswordPf.getText());
    }//GEN-LAST:event_AdminUserAddBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AddStoreBtn;
    private javax.swing.JLabel AdminNameLbl;
    private javax.swing.JTextField AdminNameTf;
    private javax.swing.JLabel AdminPasswordLbl;
    private javax.swing.JPasswordField AdminPasswordPf;
    private javax.swing.JTextField AdminSurnameTf;
    private javax.swing.JButton AdminUserAddBtn;
    private javax.swing.JButton AdminUserDeleteBtn;
    private javax.swing.JLabel AdminUserLbl;
    private javax.swing.JLabel AdminUsernameLbl;
    private javax.swing.JTextField AdminUsernameTf;
    private javax.swing.JTextField CompanyIDTf;
    private javax.swing.JLabel ContactNumberLbl;
    private javax.swing.JTextField ContactNumberTf;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton DeleteStoreBtn;
    private javax.swing.JButton DipatchUserDeleteBtn;
    private javax.swing.JLabel DispatchPasswordLbl;
    private javax.swing.JButton DispatchUserAddBtn;
    private javax.swing.JLabel DispatchUserLbl;
    private javax.swing.JLabel DispatchUser_Name_Lbl;
    private javax.swing.JLabel DispatchUser_Name_Lbl1;
    private javax.swing.JTextField DispatchUser_Name_Tf;
    private javax.swing.JPasswordField DispatchUser_Password_Pf;
    private javax.swing.JLabel DispatchUser_Surame_Lbl;
    private javax.swing.JLabel DispatchUser_Surame_Lbl1;
    private javax.swing.JTextField DispatchUser_Surname_Tf;
    private javax.swing.JTextField DispatchUser_Username_Tf;
    private javax.swing.JLabel ExitLbl;
    private javax.swing.JLabel MinLbl;
    private javax.swing.JLabel ProductNameLbl;
    private javax.swing.JTextField ProductNameTf;
    private javax.swing.JScrollPane ScrollPane_AddDispatchUserWarnings;
    private javax.swing.JScrollPane ScrollPane_AddStoreUserWarnings;
    private javax.swing.JScrollPane ScrollPane_AddStoreUserWarnings2;
    private javax.swing.JLabel StoreAddressLbl;
    private javax.swing.JTextArea StoreAddressTa;
    private javax.swing.JLabel StoreIdentityLbl;
    private javax.swing.JLabel StoreNameLbl;
    private javax.swing.JTextField StoreNameTf;
    private javax.swing.JLabel StorePasswordLbl;
    private javax.swing.JButton StoreUserAddBtn;
    private javax.swing.JButton StoreUserDeleteBtn;
    private javax.swing.JLabel StoreUserLbl;
    private javax.swing.JTextField StoreUser_Name_Tf;
    private javax.swing.JPasswordField StoreUser_Password_Pf;
    private javax.swing.JComboBox<String> StoreUser_StoreName_Cb;
    private javax.swing.JTextField StoreUser_Surname_Tf;
    private javax.swing.JTextField StoreUser_Username_Tf;
    private javax.swing.JLabel StoreUsernameLbl1;
    private javax.swing.JLabel StoreUsernameLbl2;
    private javax.swing.JLabel StoreUsernameLbl3;
    private javax.swing.JLabel StoreUsernameLbl5;
    private javax.swing.JTextArea Ta_AddAdminUserWarnings;
    private javax.swing.JTextArea Ta_AddDispatchUserWarnings;
    private javax.swing.JTextArea Ta_AddStoreUserWarnings;
    private javax.swing.JLabel UnitsPerCrateLbl1;
    private javax.swing.JLabel UnitsPerCrateLbl2;
    private javax.swing.JTextField UnitsPerCrateTf;
    private javax.swing.JLabel UsernameLbl;
    private javax.swing.JTextField UsernameTf;
    private javax.swing.JButton btnSignOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblWarningCompanyId;
    private javax.swing.JLabel lblWarningProduct;
    private javax.swing.JLabel lblWarningUnits;
    private javax.swing.JLabel password_warning_lbl1;
    private javax.swing.JLabel password_warning_lbl2;
    private javax.swing.JLabel password_warning_lbl3;
    private javax.swing.JLabel password_warning_lbl4;
    private javax.swing.JLabel password_warning_lbl5;
    private javax.swing.JLabel password_warning_lbl6;
    private javax.swing.JLabel password_warning_lbl7;
    private javax.swing.JLabel password_warning_lbl8;
    private javax.swing.JLabel password_warning_lbl9;
    private javax.swing.JLabel showPassword_AddDispatchUser_Lbl;
    private javax.swing.JLabel showPassword_AddStoreUser_Lbl;
    // End of variables declaration//GEN-END:variables

    private void addStore(String store, String phone, String username, String address) {

    }

    private void populateStoresDropdown() throws SQLException {

        rs = st.executeQuery("SELECT * FROM store");
        while (rs.next()) {
            StoreUser_StoreName_Cb.addItem(rs.getInt("store_ID") + ":" + rs.getString("store_Name"));
        }

    }

    private void addProduct(String name, String units, String compID) {

        boolean valid = true;
        int amount = -1;
        try {
            amount = Integer.parseInt(units);
            lblWarningUnits.setVisible(false);
        } catch (NumberFormatException e) {
            valid = false;
            lblWarningUnits.setText("Invalid input");
            UnitsPerCrateTf.setText("");
            lblWarningUnits.setVisible(true);
        }
        int c_ID = -1;
        try {
            c_ID = Integer.parseInt(compID);
        } catch (NumberFormatException e) {
            valid = false;
            lblWarningCompanyId.setText("Invalid input");
            CompanyIDTf.setText("");
            lblWarningCompanyId.setVisible(true);
        }
        try {
            if (companyExists(c_ID) & !productExists(name) & valid) {
                System.out.println("INSERT INTO product (product_Name, units_Per_Crate, company_ID) VALUES ('" + name + "',amount," + compID + ")");
//                st.executeUpdate("INSERT INTO product (product_Name, units_Per_Crate, company_ID) VALUES ('"+name+"',amount,"+compID+")");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    public boolean isValidPassword(String pass) {

        final String cellphoneRegex = "^(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).*$";

        Pattern pattern = Pattern.compile(cellphoneRegex);
        Matcher matcher = pattern.matcher(pass);
        return matcher.matches();
    }

    private void addStoreUser(String name, String surname, String store, String uname, String password) {

        String warnings = "";
        boolean valid = true;
        if (name.isEmpty()) {
            StoreUser_Name_Tf.setBackground(Color.RED);
            valid = false;
        } else {
            StoreUser_Name_Tf.setBackground(Color.WHITE);
        }
        if (surname.isEmpty()) {
            StoreUser_Surname_Tf.setBackground(Color.RED);
            valid = false;
        } else {
            StoreUser_Surname_Tf.setBackground(Color.WHITE);
        }

        
        if (usernameExists("Staff", uname)) {
            valid = false;
            warnings = warnings + "Username already exists \n";
            StoreUser_Username_Tf.setBackground(Color.RED);
        } else {
            if (uname.isEmpty()) {
                valid = false;
                StoreUser_Username_Tf.setBackground(Color.RED);
            } else {
                StoreUser_Username_Tf.setBackground(Color.WHITE);
            }
        }

        if (!isValidPassword(password)) {
            valid = false;
            warnings = warnings + "Invalid password \n";
            StoreUser_Password_Pf.setBackground(Color.RED);
            password_warning_lbl1.setVisible(true);
            password_warning_lbl2.setVisible(true);
            password_warning_lbl3.setVisible(true);
        } else {
            password_warning_lbl1.setVisible(false);
            password_warning_lbl2.setVisible(false);
            password_warning_lbl3.setVisible(false);
            StoreUser_Password_Pf.setBackground(Color.WHITE);
        }
        if (valid) {
            ScrollPane_AddStoreUserWarnings.setVisible(false);
            int storeID = Integer.parseInt(store.split(":")[0]);
            try {
                System.out.println("INSERT INTO Staff (staff_Name, staff_Surname, store_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + storeID + "','"
                        + uname + "','"
                        + password + "')");
                st.executeUpdate("INSERT INTO Staff (staff_Name, staff_Surname, store_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + storeID + "','"
                        + uname + "','"
                        + password + "')");
                blinkGreen(StoreUserAddBtn, "SUCCESS");
                clearAddStoreUserFields();
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            blink(StoreUserAddBtn);
            StoreUserAddBtn.setBackground(Color.WHITE);
            ScrollPane_AddStoreUserWarnings.setVisible(true);
            Ta_AddStoreUserWarnings.setText(warnings);
        }

    }

    private void addDispatchUser(String name, String surname, String uname, String password) {

        String warnings = "";
        boolean valid = true;
        if (name.isEmpty()) {
            DispatchUser_Name_Tf.setBackground(Color.RED);
            valid = false;
        } else {
            DispatchUser_Name_Tf.setBackground(Color.WHITE);
        }
        if (surname.isEmpty()) {
            DispatchUser_Surname_Tf.setBackground(Color.RED);
            valid = false;
        } else {
            DispatchUser_Surname_Tf.setBackground(Color.WHITE);
        }
        if (usernameExists("Dispatch", uname)) {
            valid = false;
            warnings = warnings + "Username already exists \n";
            DispatchUser_Username_Tf.setBackground(Color.RED);
        } else {
            if (uname.isEmpty()) {
                valid = false;
                DispatchUser_Username_Tf.setBackground(Color.RED);
            } else {
                DispatchUser_Username_Tf.setBackground(Color.WHITE);
            }
        }

        if (!isValidPassword(password)) {
            valid = false;
            warnings = warnings + "Invalid password \n";
            DispatchUser_Password_Pf.setBackground(Color.RED);
            password_warning_lbl4.setVisible(true);
            password_warning_lbl5.setVisible(true);
            password_warning_lbl6.setVisible(true);
        } else {
            password_warning_lbl4.setVisible(false);
            password_warning_lbl5.setVisible(false);
            password_warning_lbl6.setVisible(false);
            DispatchUser_Password_Pf.setBackground(Color.WHITE);
        }

        int amount = 1;
        if (valid) {
            ScrollPane_AddDispatchUserWarnings.setVisible(false);
            try {
                System.out.println("INSERT INTO dispatch (dispatch_Name, dispatch_Surname, dispatch_PhoneNumber, company_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + amount + ",'"
                        + uname + "','"
                        + password + "')");
                st.executeUpdate("INSERT INTO dispatch (dispatch_Name, dispatch_Surname, company_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + amount + "','"
                        + uname + "','"
                        + password + "')");
                blinkGreen(DispatchUserAddBtn, "SUCCESS");
                clearAddStoreUserFields();
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            blink(DispatchUserAddBtn);
            DispatchUserAddBtn.setBackground(Color.WHITE);
            ScrollPane_AddDispatchUserWarnings.setVisible(true);
            Ta_AddDispatchUserWarnings.setText(warnings);
        }

    }
    private void addAdminUser(String name, String surname, String uname, String password) {

        String warnings = "";
        boolean valid = true;
        if (name.isEmpty()) {
            AdminNameTf.setBackground(Color.RED);
            valid = false;
        } else {
            AdminNameTf.setBackground(Color.WHITE);
        }
        if (surname.isEmpty()) {
            AdminSurnameTf.setBackground(Color.RED);
            valid = false;
        } else {
            AdminSurnameTf.setBackground(Color.WHITE);
        }

        
        if (usernameExists("Admins", uname)) {
            valid = false;
            warnings = warnings + "Username already exists \n";
            AdminUsernameTf.setBackground(Color.RED);
        } else {
            if (uname.isEmpty()) {
                valid = false;
                AdminUsernameTf.setBackground(Color.RED);
            } else {
                AdminUsernameTf.setBackground(Color.WHITE);
            }
        }

        if (!isValidPassword(password)) {
            valid = false;
            warnings = warnings + "Invalid password \n";
            AdminPasswordPf.setBackground(Color.RED);
            password_warning_lbl7.setVisible(true);
            password_warning_lbl8.setVisible(true);
            password_warning_lbl9.setVisible(true);
        } else {
            password_warning_lbl7.setVisible(false);
            password_warning_lbl8.setVisible(false);
            password_warning_lbl9.setVisible(false);
            AdminPasswordPf.setBackground(Color.WHITE);
        }
        if (valid) {
            ScrollPane_AddStoreUserWarnings.setVisible(false);
            int companyID =1;
            try {
                System.out.println("INSERT INTO Admins (admin_Name, admin_Surname, company_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + companyID + "','"
                        + uname + "','"
                        + password + "')");
                st.executeUpdate("INSERT INTO Admins (admin_Name, admin_Surname, company_ID, username, password) VALUES "
                        + "('" + name + "','"
                        + surname + "','"
                        + companyID + "','"
                        + uname + "','"
                        + password + "')");
                blinkGreen(AdminUserAddBtn, "SUCCESS");
                clearAddAdminUserFields();
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {

            blink(AdminUserAddBtn);
            AdminUserAddBtn.setBackground(Color.WHITE);
            ScrollPane_AddStoreUserWarnings.setVisible(true);
            Ta_AddAdminUserWarnings.setText(warnings);
        }

    }

    private void setPreferredStates() {
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        lblWarningUnits.setVisible(false);
        lblWarningCompanyId.setVisible(false);
        lblWarningProduct.setVisible(false);
        ScrollPane_AddStoreUserWarnings.setVisible(false);
        ScrollPane_AddDispatchUserWarnings.setVisible(false);
        password_warning_lbl1.setVisible(false);
        password_warning_lbl2.setVisible(false);
        password_warning_lbl3.setVisible(false);
        password_warning_lbl4.setVisible(false);
        password_warning_lbl5.setVisible(false);
        password_warning_lbl6.setVisible(false);
        password_warning_lbl7.setVisible(false);
        password_warning_lbl8.setVisible(false);
        password_warning_lbl9.setVisible(false);
    }

    private boolean companyExists(int c_ID) throws SQLException {
        rs = st.executeQuery("SELECT * FROM company WHERE company_ID= " + c_ID + ";");
        if (rs.next()) {
            lblWarningCompanyId.setVisible(false);
            return true;
        } else {
            lblWarningCompanyId.setVisible(true);
            lblWarningCompanyId.setText("Invalid company ID.");
            return false;
        }
    }

    private boolean productExists(String name) throws SQLException {
        if (name.isEmpty()) {
            lblWarningProduct.setVisible(true);
            lblWarningProduct.setText("Please specify.");
            return true;
        } else {
            lblWarningProduct.setVisible(false);
        }
        rs = st.executeQuery("SELECT * FROM PRODUCT WHERE product_Name = '" + name + "';");
        if (rs.next()) {
            System.out.println("Exists");
            lblWarningProduct.setVisible(true);
            lblWarningProduct.setText("Product already exists.");
            return true;
        } else {
            lblWarningProduct.setVisible(false);
            return false;
        }
    }


    private boolean usernameExists(String table, String u_Name) {

        try {
            rs = st.executeQuery("SELECT * FROM " + table + " WHERE username = '" + u_Name + "';");
            if (rs.next()) {
                System.out.println("username exists");
                return true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    boolean doneblinking = true;

    private void blinkGreen(JButton button, String message) {
        if (doneblinking) {
            doneblinking = false;
            String originalText = button.getText();
            button.setText(message);
            Color original = button.getBackground();
            Timer blinkTimer = new Timer(200, new ActionListener() {
                private int count = 0;
                private int maxCount = 8;
                private boolean on = false;

                public void actionPerformed(ActionEvent e) {
                    if (count >= maxCount) {
                        button.setBackground(original);
                        button.setText(originalText);
                        doneblinking = true;
                        ((Timer) e.getSource()).stop();
                    } else {
                        button.setBackground(on ? Color.GREEN : null);
                        on = !on;
                        count++;
                    }
                }
            });
            blinkTimer.start();
        }
    }

    private void blink(JButton button) {
        if (doneblinking) {
            doneblinking = false;
            Color original = button.getBackground();
            Timer blinkTimer = new Timer(50, new ActionListener() {
                private int count = 0;
                private int maxCount = 4;
                private boolean on = false;

                public void actionPerformed(ActionEvent e) {
                    if (count >= maxCount) {
                        button.setBackground(original);

                        doneblinking = true;
                        ((Timer) e.getSource()).stop();
                    } else {
                        button.setBackground(on ? Color.RED : null);
                        on = !on;
                        count++;
                    }
                }
            });
            blinkTimer.start();
        }
    }

    public ImageIcon getImageIcon(File f) {

        ImageIcon ii = null;
        try {
            Image im = ImageIO.read(f);

            ii = new ImageIcon(im);

        } catch (IOException i) {

            i.printStackTrace();

        } finally {

            return ii;

        }
    }

    private void clearAddStoreUserFields() {
        StoreUser_Name_Tf.setText("");
        StoreUser_Surname_Tf.setText("");
        StoreUser_Username_Tf.setText("");
        StoreUser_Password_Pf.setText("");
        showPassword_AddDispatchUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password.png")));
        StoreUser_Password_Pf.setEchoChar('*');
    }

    private void clearAddDispatchUserFields() {
        DispatchUser_Name_Tf.setText("");
        DispatchUser_Surname_Tf.setText("");
        DispatchUser_Username_Tf.setText("");
        DispatchUser_Password_Pf.setText("");
        showPassword_AddDispatchUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password-white.png")));
        DispatchUser_Password_Pf.setEchoChar('*');
    }
    
        private void clearAddAdminUserFields() {
        AdminNameTf.setText("");
        AdminSurnameTf.setText("");
        AdminUsernameTf.setText("");
        AdminPasswordPf.setText("");
        showPassword_AddDispatchUser_Lbl.setIcon(getImageIcon(new File("src/Resources/show-password.png")));
        AdminPasswordPf.setEchoChar('*');
    }

    private void deleteStoreUser(String u_name) {
        if (usernameExists("staff", u_name)) {
            try {
                st.executeUpdate("DELETE FROM STAFF WHERE username = '" + u_name + "'");

                blinkGreen(StoreUserDeleteBtn, "DELETED");
                ScrollPane_AddStoreUserWarnings.setVisible(false);
            } catch (SQLException ex) {
                Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ScrollPane_AddStoreUserWarnings.setVisible(true);
            Ta_AddStoreUserWarnings.setText("User not found");
        }
    }

}
